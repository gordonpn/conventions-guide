---
kind: pipeline
type: docker
name: notification

trigger:
  event: [ push, pull_request ]

steps:
  - name: slack before
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        build #{{build.number}} started

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL

---
kind: pipeline
type: docker
name: build docker images

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: build image
    image: docker/compose:1.25.5
    environment:
      COMPOSE_PROJECT_NAME: conventions-site
      TZ: America/Montreal
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker-compose -f /drone/src/docker-compose.yml -f /drone/src/docker-compose.prod.yml build

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: publish docker image

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: publish
    image: docker
    environment:
      DOCKER_TOKEN:
        from_secret: DOCKER_TOKEN
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - echo $DOCKER_TOKEN | docker login -u gordonpn --password-stdin
      - docker build -t gordonpn/conventions-guide:latest .
      - docker push gordonpn/conventions-guide:latest

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: security

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: snyk scan
    image: node:14-buster-slim
    environment:
      SNYK_TOKEN:
        from_secret: SNYK_TOKEN
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
      - curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
      - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
      - apt-get update && apt-get install -y docker-ce
      - npm install -g snyk
      - snyk test --severity-threshold=high
      - snyk test --docker conventions-guide:latest --file=Dockerfile

depends_on:
  - publish docker image

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: deploy

trigger:
  event:
    - push
  branch:
    - master

steps:
  - name: deploy prod
    image: docker/compose:1.25.5
    environment:
      COMPOSE_PROJECT_NAME: conventions-site
      TZ: America/Montreal
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker-compose -f /drone/src/docker-compose.yml -f /drone/src/docker-compose.prod.yml up --detach --build
  # - name: deploy prod
  #   image: docker
  #   environment:
  #     TZ: America/Montreal
  #   volumes:
  #     - name: dockersock
  #       path: /var/run/docker.sock
  #   commands:
  #     - docker stack deploy -c /drone/src/docker-compose.yml -c /drone/src/docker-compose.prod.yml conventions-site

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: notification after

trigger:
  event: [ push, pull_request ]

steps:
  - name: slack after
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        build #{{build.number}} succeeded
        {{else}}
        build #{{build.number}} failed
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

depends_on:
  - build docker images
  - publish docker image
  - security
  - deploy
